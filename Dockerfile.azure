# Use official Python 3.12 slim image
FROM python:3.12-slim

# Set working directory to Azure App Service expected location
WORKDIR /home/site/wwwroot

# Set environment variables
ENV PYTHONPATH=/home/site/wwwroot
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV CHROMADB_ALLOW_RESET=true
ENV LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc g++ make pkg-config wget libsqlite3-dev \
    libgl1-mesa-glx libglib2.0-0 libsm6 libxext6 \
    libxrender-dev libgomp1 curl \
    && rm -rf /var/lib/apt/lists/*

# Compile and install newer SQLite from source
RUN cd /tmp && \
    wget https://www.sqlite.org/2024/sqlite-autoconf-3450100.tar.gz && \
    tar xzf sqlite-autoconf-3450100.tar.gz && \
    cd sqlite-autoconf-3450100 && \
    ./configure --prefix=/usr/local && \
    make && make install && ldconfig && \
    cd / && rm -rf /tmp/sqlite-autoconf-*

# Upgrade pip and install Python dependencies
RUN pip install --upgrade pip setuptools wheel
COPY requirements.txt .
RUN pip install --no-cache-dir --root-user-action=ignore -r requirements.txt

# Copy application code
COPY app/ ./app/
COPY static/ ./static/
COPY startup.py ./
COPY gunicorn_conf.py ./
COPY debug_start.sh ./debug_start.sh

# Create required directories with correct permissions
RUN mkdir -p data/chromadb data/uploads data/tmp data/logs \
    /tmp/chromadb /tmp/uploads /tmp/data /tmp/logs \
    /home/data/chromadb /home/data/uploads /home/data/tmp /home/data/logs && \
    chmod -R 777 data /tmp /home/data 2>/dev/null || true && \
    chmod -R 755 app static && \
    chmod +x debug_start.sh

# Expose the app port
EXPOSE 8000

# Add healthcheck
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Start the app
CMD ["./debug_start.sh"]