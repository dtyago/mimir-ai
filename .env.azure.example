# Azure App Service Configuration Template for Mimir API
# Copy this file to .env.azure and fill in your actual values

## Application Settings (Environment Variables)
# Set these in Azure Portal > App Service > Configuration > Application Settings

AZURE_OPENAI_ENDPOINT=https://your-resource-name.openai.azure.com/
AZURE_OPENAI_API_KEY=your-actual-api-key-here
AZURE_OPENAI_API_VERSION=2024-12-01-preview
AZURE_OPENAI_DEPLOYMENT_NAME=your-deployment-name

# Database Configuration (Azure App Service paths)
CHROMADB_LOC=/tmp/chromadb

# Security Configuration
# Generate admin password hash with: python -c "import bcrypt; print(bcrypt.hashpw(b'your_password', bcrypt.gensalt()).decode())"
# Default username is "admin" (hardcoded in app/admin/admin_functions.py)
EC_ADMIN_PWD=your-bcrypt-hashed-password-here
JWT_SECRET_KEY=your-jwt-secret-key-here

# Application Configuration
APP_ENV=production
APP_HOST=0.0.0.0
APP_PORT=8000

# CORS origins (Azure App Service URLs)
CORS_ORIGINS=https://your-app-name.azurewebsites.net,https://yourdomain.com

# Face Recognition Configuration
L2_FACE_THRESHOLD=0.85
SESSION_VALIDITY_MINUTES=1440

# File Upload Configuration
MAX_FILE_SIZE=50000000
ALLOWED_FILE_TYPES=application/pdf
TEMP_UPLOAD_DIR=/tmp/uploads

# Data Storage Configuration (Azure App Service paths)
USER_DATA_DIR=/tmp/data
UPLOAD_DIR=/tmp/uploads
FACE_TEMP_DIR=/tmp/face_images

# Logging Configuration
LOG_LEVEL=INFO
LOG_FILE=/tmp/logs/mimir-api.log

# Azure App Service Specific
SCM_DO_BUILD_DURING_DEPLOYMENT=true
PYTHONPATH=/home/site/wwwroot
PORT=8000

# Development Configuration
DEBUG=false
AUTO_RELOAD=false

# Azure App Service Notes
# 1. Use /tmp directory for temporary files (persistent across restarts)
# 2. Static files are served by Azure App Service automatically
# 3. Logs are available in Azure Portal > App Service > Log stream
# 4. Environment variables are set in Configuration > Application Settings
# 5. Custom domains can be configured in Custom domains section
# 6. CRITICAL: Copy this to .env.azure with real values - NEVER commit .env.azure!

# Admin Credentials Setup
# 1. Choose a secure password
# 2. Generate hash: python -c "import bcrypt; print(bcrypt.hashpw(b'your_password', bcrypt.gensalt()).decode())"
# 3. Update EC_ADMIN_PWD above with the generated hash
# 4. Username is always "admin"
# 6. IMPORTANT: Never commit .env.azure with real secrets to version control
