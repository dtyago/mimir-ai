# Azure App Service Configuration Template for Mimir API
# Copy this file to .env.azure and fill in your actual values

## Azure Deployment Configuration
# These values control the Azure deployment process
RESOURCE_GROUP=your-resource-group-name
LOCATION="your-azure-region"
APP_NAME=your-app-service-name
ACR_NAME=your-container-registry-name

## Application Settings (Environment Variables)
# Set these in Azure Portal > App Service > Configuration > Application Settings

AZURE_OPENAI_ENDPOINT=https://your-resource-name.openai.azure.com/
AZURE_OPENAI_API_KEY=your-actual-api-key-here
AZURE_OPENAI_API_VERSION=2024-12-01-preview
AZURE_OPENAI_DEPLOYMENT_NAME=your-deployment-name

# Database Configuration (Azure App Service paths)
CHROMADB_LOC=/tmp/chromadb

# Security Configuration
# Generate admin password hash with: python -c "import bcrypt; print(bcrypt.hashpw(b'your_password', bcrypt.gensalt()).decode())"
# Default username is "admin" (hardcoded in app/admin/admin_functions.py)
EC_ADMIN_PWD=your-bcrypt-hashed-password-here
JWT_SECRET_KEY=your-jwt-secret-key-here

# Application Configuration
APP_ENV=production
APP_HOST=0.0.0.0
APP_PORT=8000

# CORS origins (Azure App Service URLs)
CORS_ORIGINS=https://your-app-name.azurewebsites.net,https://yourdomain.com

# Face Recognition Configuration
L2_FACE_THRESHOLD=0.6
SESSION_VALIDITY_MINUTES=1440

# Role Configuration (Environment-Specific)
# Configure roles based on your deployment domain:
# Healthcare: doctor,nurse,administrator,patient
# Education: teacher,student,administrator,parent  
# Gaming: analyst-gaming,analyst-non-gaming,leadership-gaming,leadership-non-gaming
# Corporate: employee,manager,executive,contractor
# Generic: human
MIMIR_ROLES=human,analyst,administrator
DEFAULT_ROLE=human

# File Upload Configuration
MAX_FILE_SIZE=50000000
ALLOWED_FILE_TYPES=application/pdf
TEMP_UPLOAD_DIR=/tmp/uploads

# Data Storage Configuration (Azure App Service paths)
USER_DATA_DIR=/tmp/data
UPLOAD_DIR=/tmp/uploads
FACE_TEMP_DIR=/tmp/face_images

# Logging Configuration
LOG_LEVEL=INFO
LOG_FILE=/tmp/logs/mimir-api.log

# Azure App Service Specific
SCM_DO_BUILD_DURING_DEPLOYMENT=true
PYTHONPATH=/home/site/wwwroot
PORT=8000

# Development Configuration
DEBUG=false
AUTO_RELOAD=false

# Azure Deployment & Configuration Notes
# ==================================

## Required Setup Steps:
# 1. Copy this file to .env.azure
# 2. Update RESOURCE_GROUP, LOCATION, APP_NAME with your Azure values
# 3. Set ACR_NAME to your Container Registry name (or leave empty for auto-detection)
# 4. Configure your Azure OpenAI credentials
# 5. Generate admin password hash: python -c "import bcrypt; print(bcrypt.hashpw(b'your_password', bcrypt.gensalt()).decode())"
# 6. Generate JWT secret: python -c "import secrets; print(secrets.token_urlsafe(64))"

## Azure App Service Information:
# - Use /tmp directory for temporary files (persistent across restarts)
# - Static files are served by Azure App Service automatically
# - Logs are available in Azure Portal > App Service > Log stream
# - Environment variables are set in Configuration > Application Settings
# - Custom domains can be configured in Custom domains section

## Deployment Process:
# - The deploy-container-to-azure.sh script reads this configuration
# - All values are automatically deployed to Azure App Service
# - Both deployment settings (RESOURCE_GROUP, etc.) and app settings are configured
# - Admin login: username "admin" with your chosen password

## SECURITY WARNING:
# - NEVER commit .env.azure with real secrets to version control
# - Use strong passwords and rotate credentials regularly
# - Review Azure security best practices
